{"ast":null,"code":"/** An error emitted by Sentry SDKs and related utilities. */\nclass SentryError extends Error {\n  /** Display name of this error instance. */\n  constructor(message) {\n    let logLevel = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'warn';\n    super(message);\n    this.message = message;\n    ;\n    this.name = new.target.prototype.constructor.name; // This sets the prototype to be `Error`, not `SentryError`. It's unclear why we do this, but commenting this line\n    // out causes various (seemingly totally unrelated) playwright tests consistently time out. FYI, this makes\n    // instances of `SentryError` fail `obj instanceof SentryError` checks.\n\n    Object.setPrototypeOf(this, new.target.prototype);\n    this.logLevel = logLevel;\n  }\n\n}\n\nexport { SentryError };","map":{"version":3,"mappings":"AAEA;;EAEA;EAKAA;IAAA;IACA;IAAA;IAAA;IAEA,kDAHA,CAIA;IACA;IACA;;IACAC;IACA;EACA","names":["constructor","Object"],"sources":["C:\\Users\\Somayeh\\Documents\\GitHub\\ReactProject\\node_modules\\@sentry\\src\\error.ts"],"sourcesContent":["import type { ConsoleLevel } from './logger';\n\n/** An error emitted by Sentry SDKs and related utilities. */\nexport class SentryError extends Error {\n  /** Display name of this error instance. */\n  public name: string;\n\n  public logLevel: ConsoleLevel;\n\n  public constructor(public message: string, logLevel: ConsoleLevel = 'warn') {\n    super(message);\n\n    this.name = new.target.prototype.constructor.name;\n    // This sets the prototype to be `Error`, not `SentryError`. It's unclear why we do this, but commenting this line\n    // out causes various (seemingly totally unrelated) playwright tests consistently time out. FYI, this makes\n    // instances of `SentryError` fail `obj instanceof SentryError` checks.\n    Object.setPrototypeOf(this, new.target.prototype);\n    this.logLevel = logLevel;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}