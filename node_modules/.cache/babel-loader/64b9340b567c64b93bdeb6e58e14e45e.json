{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Somayeh\\\\Downloads\\\\Video\\\\ReactMosh\\\\New folder\\\\ReactPro\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\Somayeh\\\\Downloads\\\\Video\\\\ReactMosh\\\\New folder\\\\ReactPro\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { getGlobalObject } from '@sentry/utils';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport * as React from 'react';\nvar _jsxFileName = \"/home/runner/work/sentry-javascript/sentry-javascript/packages/react/src/reactrouter.tsx\"; // We need to disable eslint no-explict-any because any is required for the\n// react-router typings.\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/* eslint-enable @typescript-eslint/no-explicit-any */\n\nvar global = getGlobalObject();\nvar activeTransaction;\n\nfunction reactRouterV4Instrumentation(history, routes, matchPath) {\n  return createReactRouterInstrumentation(history, 'react-router-v4', routes, matchPath);\n}\n\nfunction reactRouterV5Instrumentation(history, routes, matchPath) {\n  return createReactRouterInstrumentation(history, 'react-router-v5', routes, matchPath);\n}\n\nfunction createReactRouterInstrumentation(history, name) {\n  var allRoutes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var matchPath = arguments.length > 3 ? arguments[3] : undefined;\n\n  function getInitPathName() {\n    if (history && history.location) {\n      return history.location.pathname;\n    }\n\n    if (global && global.location) {\n      return global.location.pathname;\n    }\n\n    return undefined;\n  }\n  /**\n   * Normalizes a transaction name. Returns the new name as well as the\n   * source of the transaction.\n   *\n   * @param pathname The initial pathname we normalize\n   */\n\n\n  function normalizeTransactionName(pathname) {\n    if (allRoutes.length === 0 || !matchPath) {\n      return [pathname, 'url'];\n    }\n\n    var branches = matchRoutes(allRoutes, pathname, matchPath); // eslint-disable-next-line @typescript-eslint/prefer-for-of\n\n    for (var x = 0; x < branches.length; x++) {\n      if (branches[x].match.isExact) {\n        return [branches[x].match.path, 'route'];\n      }\n    }\n\n    return [pathname, 'url'];\n  }\n\n  var tags = {\n    'routing.instrumentation': name\n  };\n  return function (customStartTransaction) {\n    var startTransactionOnPageLoad = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    var startTransactionOnLocationChange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    var initPathName = getInitPathName();\n\n    if (startTransactionOnPageLoad && initPathName) {\n      var _normalizeTransaction = normalizeTransactionName(initPathName),\n          _normalizeTransaction2 = _slicedToArray(_normalizeTransaction, 2),\n          _name = _normalizeTransaction2[0],\n          source = _normalizeTransaction2[1];\n\n      activeTransaction = customStartTransaction({\n        name: _name,\n        op: 'pageload',\n        tags: tags,\n        metadata: {\n          source: source\n        }\n      });\n    }\n\n    if (startTransactionOnLocationChange && history.listen) {\n      history.listen(function (location, action) {\n        if (action && (action === 'PUSH' || action === 'POP')) {\n          if (activeTransaction) {\n            activeTransaction.finish();\n          }\n\n          var _normalizeTransaction3 = normalizeTransactionName(location.pathname),\n              _normalizeTransaction4 = _slicedToArray(_normalizeTransaction3, 2),\n              _name2 = _normalizeTransaction4[0],\n              _source = _normalizeTransaction4[1];\n\n          activeTransaction = customStartTransaction({\n            name: _name2,\n            op: 'navigation',\n            tags: tags,\n            metadata: {\n              source: _source\n            }\n          });\n        }\n      });\n    }\n  };\n}\n/**\n * Matches a set of routes to a pathname\n * Based on implementation from\n */\n\n\nfunction matchRoutes(routes, pathname, matchPath) {\n  var branch = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  routes.some(function (route) {\n    var match = route.path ? matchPath(pathname, route) : branch.length ? branch[branch.length - 1].match // use parent match\n    : computeRootMatch(pathname); // use default \"root\" match\n\n    if (match) {\n      branch.push({\n        route: route,\n        match: match\n      });\n\n      if (route.routes) {\n        matchRoutes(route.routes, pathname, matchPath, branch);\n      }\n    }\n\n    return !!match;\n  });\n  return branch;\n}\n\nfunction computeRootMatch(pathname) {\n  return {\n    path: '/',\n    url: '/',\n    params: {},\n    isExact: pathname === '/'\n  };\n}\n/* eslint-disable @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access */\n\n\nfunction withSentryRouting(Route) {\n  var _this = this;\n\n  var componentDisplayName = Route.displayName || Route.name;\n\n  var WrappedRoute = function WrappedRoute(props) {\n    if (activeTransaction && props && props.computedMatch && props.computedMatch.isExact) {\n      activeTransaction.setName(props.computedMatch.path, 'route');\n    } // @ts-ignore Setting more specific React Component typing for `R` generic above\n    // will break advanced type inference done by react router params:\n    // https://github.com/DefinitelyTyped/DefinitelyTyped/blob/13dc4235c069e25fe7ee16e11f529d909f9f3ff8/types/react-router/index.d.ts#L154-L164\n\n\n    return React.createElement(Route, _objectSpread({}, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      }\n    }));\n  };\n\n  WrappedRoute.displayName = \"sentryRoute(\".concat(componentDisplayName, \")\");\n  hoistNonReactStatics(WrappedRoute, Route); // @ts-ignore Setting more specific React Component typing for `R` generic above\n  // will break advanced type inference done by react router params:\n  // https://github.com/DefinitelyTyped/DefinitelyTyped/blob/13dc4235c069e25fe7ee16e11f529d909f9f3ff8/types/react-router/index.d.ts#L154-L164\n\n  return WrappedRoute;\n}\n/* eslint-enable @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access */\n\n\nexport { reactRouterV4Instrumentation, reactRouterV5Instrumentation, withSentryRouting };","map":null,"metadata":{},"sourceType":"module"}