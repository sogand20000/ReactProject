{"ast":null,"code":"import { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { getGlobalObject } from '@sentry/utils';\nvar global = getGlobalObject();\n/** HttpContext integration collects information about HTTP request headers */\n\nclass HttpContext {\n  constructor() {\n    HttpContext.prototype.__init.call(this);\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  static __initStatic() {\n    this.id = 'HttpContext';\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  __init() {\n    this.name = HttpContext.id;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  setupOnce() {\n    addGlobalEventProcessor(event => {\n      if (getCurrentHub().getIntegration(HttpContext)) {\n        // if none of the information we want exists, don't bother\n        if (!global.navigator && !global.location && !global.document) {\n          return event;\n        } // grab as much info as exists and add it to the event\n\n\n        var url = event.request && event.request.url || global.location && global.location.href;\n        const {\n          referrer\n        } = global.document || {};\n        const {\n          userAgent\n        } = global.navigator || {};\n        var headers = { ...(event.request && event.request.headers),\n          ...(referrer && {\n            Referer: referrer\n          }),\n          ...(userAgent && {\n            'User-Agent': userAgent\n          })\n        };\n        var request = { ...(url && {\n            url\n          }),\n          headers\n        };\n        return { ...event,\n          request\n        };\n      }\n\n      return event;\n    });\n  }\n\n}\n\nHttpContext.__initStatic();\n\nexport { HttpContext };","map":{"version":3,"mappings":";;AAIA;AAEA;;;;;;EAEA;AACA;AACA;;;EACA;IAAA;EAAA;EAEA;AACA;AACA;;;EACAA;IAAA;EAAA;EAEA;AACA;AACA;;;EACAC;IACAC;MACA;QACA;QACA;UACA;QACA,CAJA,CAMA;;;QACA;QACA;UAAAC;QAAA;QACA;UAAAC;QAAA;QAEA,gBACA,2CADA;UAEA;YAAAC;UAAA,EAFA;UAGA;YAAA;UAAA;QAHA;QAKA;YAAAC;UAAA;UAAAC;QAAA;QAEA;UAAAC;QAAA;MACA;;MACA;IACA,CAtBA;EAuBA;;;;AACAC","names":["__init","setupOnce","addGlobalEventProcessor","referrer","userAgent","Referer","url","headers","request","HttpContext"],"sources":["C:\\Users\\Somayeh\\Downloads\\Video\\ReactMosh\\New folder\\ReactPro\\my-app\\node_modules\\src\\integrations\\httpcontext.ts"],"sourcesContent":["import { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { Event, Integration } from '@sentry/types';\nimport { getGlobalObject } from '@sentry/utils';\n\nconst global = getGlobalObject<Window>();\n\n/** HttpContext integration collects information about HTTP request headers */\nexport class HttpContext implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'HttpContext';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = HttpContext.id;\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    addGlobalEventProcessor((event: Event) => {\n      if (getCurrentHub().getIntegration(HttpContext)) {\n        // if none of the information we want exists, don't bother\n        if (!global.navigator && !global.location && !global.document) {\n          return event;\n        }\n\n        // grab as much info as exists and add it to the event\n        const url = (event.request && event.request.url) || (global.location && global.location.href);\n        const { referrer } = global.document || {};\n        const { userAgent } = global.navigator || {};\n\n        const headers = {\n          ...(event.request && event.request.headers),\n          ...(referrer && { Referer: referrer }),\n          ...(userAgent && { 'User-Agent': userAgent }),\n        };\n        const request = { ...(url && { url }), headers };\n\n        return { ...event, request };\n      }\n      return event;\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}