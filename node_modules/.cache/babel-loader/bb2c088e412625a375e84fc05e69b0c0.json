{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Somayeh\\\\Documents\\\\GitHub\\\\ReactProject\\\\src\\\\screen\\\\Movies.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { getMovies } from '../services/fakeMoviesService';\nimport { getGenres } from '../services/fakeGenreService';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport Pagination from '../component/Pagination';\nimport MoviesTable from '../component/MoviesTable';\nimport SearchInput from './../component/SearchInput';\nimport _ from 'lodash';\nimport paginate from '../utils/paginate';\nimport Genre from '../screen/genre';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Movies() {\n  _s();\n\n  const [moveis, setMoveis] = useState(getMovies());\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalCount, setTotalCount] = useState(getMovies().length);\n  const [pageSize, setPageSize] = useState(5);\n  const [searchInput, setSearchInput] = useState('');\n  const [genres, setGenres] = useState([{\n    _id: '',\n    name: 'All Genres'\n  }, ...getGenres()]);\n  const [itemActive, setItemActive] = useState();\n\n  const handlePageChange = page => {\n    setCurrentPage(page);\n  };\n\n  const filtered = itemActive ? moveis.filter(m => m.genre._id === itemActive) : moveis;\n  const moviespaginate = paginate(filtered, currentPage, pageSize);\n  const pagesCount = filtered.length / pageSize;\n  if (pagesCount === 1) return null;\n\n  const pages = _.range(1, pagesCount + 1);\n\n  const handelSelectGenre = genreItem => {\n    setItemActive(genreItem._id);\n    setCurrentPage(1);\n  };\n\n  const handleSearch = e => {\n    const searchitem = e.target.value; //setSearchInput(searchitem)\n\n    console.log('====================================');\n    console.log(e.target.value);\n    console.log('====================================');\n\n    if (e.target.value) {\n      // setSearchInput(searchitem)\n      const data = getMovies().filter(item => item.title.includes(e.target.value));\n      setMoveis(data);\n    } else {\n      setMoveis(getMovies());\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Showing \", \" movies in the database.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          lg: \"2\",\n          children: /*#__PURE__*/_jsxDEV(Genre, {\n            Items: genres,\n            ItemActive: itemActive,\n            onSelectGenre: handelSelectGenre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          lg: \"8\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"btn btn-primary\",\n            href: \"/movies/New\",\n            role: \"button\",\n            children: \"New Movie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SearchInput, {\n            value: searchInput,\n            onChange: handleSearch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MoviesTable, {\n            moviespaginate: moviespaginate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            itemsCount: filtered.length,\n            pagesCount: pagesCount,\n            pages: pages,\n            pageSize: pageSize,\n            currentPage: currentPage,\n            onPageChange: handlePageChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Movies, \"PlUnvxeawl5hYwEgXdU6Xl52+yw=\");\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"names":["React","useEffect","useState","getMovies","getGenres","Container","Row","Col","Pagination","MoviesTable","SearchInput","_","paginate","Genre","Movies","moveis","setMoveis","currentPage","setCurrentPage","totalCount","setTotalCount","length","pageSize","setPageSize","searchInput","setSearchInput","genres","setGenres","_id","name","itemActive","setItemActive","handlePageChange","page","filtered","filter","m","genre","moviespaginate","pagesCount","pages","range","handelSelectGenre","genreItem","handleSearch","e","searchitem","target","value","console","log","data","item","title","includes"],"sources":["C:/Users/Somayeh/Documents/GitHub/ReactProject/src/screen/Movies.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { getMovies } from '../services/fakeMoviesService'\r\nimport { getGenres } from '../services/fakeGenreService'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport Pagination from '../component/Pagination'\r\nimport MoviesTable from '../component/MoviesTable'\r\nimport SearchInput from './../component/SearchInput'\r\nimport _ from 'lodash'\r\nimport paginate from '../utils/paginate'\r\nimport Genre from '../screen/genre'\r\nfunction Movies() {\r\n  const [moveis, setMoveis] = useState(getMovies())\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [totalCount, setTotalCount] = useState(getMovies().length)\r\n  const [pageSize, setPageSize] = useState(5)\r\n  const [searchInput, setSearchInput] = useState('')\r\n  const [genres, setGenres] = useState([\r\n    { _id: '', name: 'All Genres' },\r\n    ...getGenres(),\r\n  ])\r\n  const [itemActive, setItemActive] = useState()\r\n\r\n  const handlePageChange = (page) => {\r\n    setCurrentPage(page)\r\n  }\r\n\r\n  const filtered = itemActive\r\n    ? moveis.filter((m) => m.genre._id === itemActive)\r\n    : moveis\r\n\r\n  const moviespaginate = paginate(filtered, currentPage, pageSize)\r\n\r\n  const pagesCount = filtered.length / pageSize\r\n  if (pagesCount === 1) return null\r\n  const pages = _.range(1, pagesCount + 1)\r\n\r\n  const handelSelectGenre = (genreItem) => {\r\n    setItemActive(genreItem._id)\r\n    setCurrentPage(1)\r\n  }\r\n  const handleSearch = (e) => {\r\n    const searchitem = e.target.value\r\n    //setSearchInput(searchitem)\r\n    console.log('====================================')\r\n    console.log(e.target.value)\r\n    console.log('====================================')\r\n    if (e.target.value) {\r\n      // setSearchInput(searchitem)\r\n      const data = getMovies().filter((item) =>\r\n        item.title.includes(e.target.value)\r\n      )\r\n      setMoveis(data)\r\n    } else {\r\n      setMoveis(getMovies())\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Row>\r\n          <p>Showing {/* {count} */} movies in the database.</p>\r\n          <Col lg=\"2\">\r\n            <Genre\r\n              Items={genres}\r\n              ItemActive={itemActive}\r\n              onSelectGenre={handelSelectGenre}\r\n            ></Genre>\r\n          </Col>\r\n          <Col lg=\"8\">\r\n            <a className=\"btn btn-primary\" href=\"/movies/New\" role=\"button\">\r\n              New Movie\r\n            </a>\r\n            <SearchInput\r\n              value={searchInput}\r\n              onChange={handleSearch}\r\n            ></SearchInput>\r\n            <MoviesTable moviespaginate={moviespaginate}></MoviesTable>\r\n\r\n            <Pagination\r\n              itemsCount={filtered.length}\r\n              pagesCount={pagesCount}\r\n              pages={pages}\r\n              pageSize={pageSize}\r\n              currentPage={currentPage}\r\n              onPageChange={handlePageChange}\r\n            ></Pagination>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Movies\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}